package require tcltest
namespace import ::tcltest::test ::tcltest::cleanupTests ::tcltest::testConstraint

# Load all .tcl files
package require fileutil
set files [lsort [fileutil::findByPattern "~/qcode-tcl/tcl" "*.tcl"]]
foreach file $files {
    source $file
}
namespace import ::qc::*

test format_commify-1.0 {format_commify success} {qc::format_commify 2305} 2,305
test format_commify-1.1 {format_commify nothing to do} {qc::format_commify 305} 305
test format_commify-1.2 {format_commify long} {qc::format_commify 12345678901234567890} 12,345,678,901,234,567,890

test format_money-1.0 {format_money success} {qc::format_money 2305} 2,305.00
test format_money-1.1 {format_money long} {qc::format_money 12345678901234567890} 12,345,678,901,234,567,890.00
test format_money-1.2 {format_money round up} {qc::format_money 2305.128} 2,305.13
test format_money-1.3 {format_money nothing to do} {qc::format_money 2,305.12} 2,305.12

test format_dec-1.0 {format_dec success1} {qc::format_dec 2305 2} 2,305.00
test format_dec-1.1 {format_dec success2} {qc::format_dec 2305.128 2} 2,305.13
test format_dec-1.2 {format_dec long} {qc::format_dec 12342305.123456789 5} 12,342,305.12346

test format_int-1.0 {format_int truncate} {qc::format_int 2305.123} 2,305
test format_int-1.1 {format_int commify only} {qc::format_int 2305} 2,305
test format_int-1.2 {format_int long} {qc::format_int 123456789.123456789} 123,456,789
test format_int-1.3 {format_int long round up} {qc::format_int 123456789.987654321} 123,456,790

test format_linebreak-1.0 {format_linebreak 80} -body {
    qc::format_linebreak "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum." 80
} -result {{Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor} {incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis} {nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.} {Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu} {fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in} {culpa qui officia deserunt mollit anim id est laborum.}}

test format_linebreak-1.1 {format_linebreak 10} -body {
    qc::format_linebreak "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum." 10
} -result {Lorem ipsum {dolor sit} amet, consectetu r adipisicin {g elit,} {sed do} eiusmod tempor incididunt {ut labore} {et dolore} magna {aliqua. Ut} {enim ad} minim veniam, quis nostrud exercitati {on ullamco} laboris {nisi ut} {aliquip ex} {ea commodo} consequat. {Duis aute} irure {dolor in} reprehende {rit in} voluptate {velit esse} cillum {dolore eu} fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, {sunt in} {culpa qui} officia deserunt mollit {anim id} est laborum.}

test format_linebreak-1.2 {format_linebreak 500} -body {
    qc::format_linebreak "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum." 500
} -result {{Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.}}

test format_cc-1.0 {format_cc visa} {qc::format_cc 4111111111111111} "4111 1111 1111 1111"
test format_cc-1.1 {format_cc nothing to do } {qc::format_cc "4111 1111 1111 1111"} "4111 1111 1111 1111"
# TODO not strictly correct - amex arrange as such 3714 496353 98431
test format_cc-1.2 {format_cc amex } {qc::format_cc 371449635398431} "3714 4963 5398 431"
test format_cc-1.3 {format_cc visa strip } {qc::format_cc "4111-1111-1111-1111"} "4111 1111 1111 1111"

test format_cc_bin-1.0 {format_cc_bin visa default} {qc::format_cc_bin 4111111111111111} "411111"
test format_cc_bin-1.1 {format_cc_bin visa 10} -body {
    qc::format_cc_bin 4111111111111111 10
} -returnCodes 1 -result {prefix must be less than 6}
test format_cc_bin-1.2 {format_cc_bin visa default strip} {qc::format_cc_bin 4111-1111-1111-1111} "411111"
test format_cc_bin-1.3 {format_cc_bin visa default masked} {qc::format_cc_bin 4111********1111} "4111**"
test format_cc_bin-1.4 {format_cc_bin visa 2} {qc::format_cc_bin 4111111111111111 2} "41"

test format_cc_tail-1.0 {format_cc_tail default} {qc::format_cc_tail 4111111111111111} "1111"
test format_cc_tail-1.1 {format_cc_tail visa 6} -body {
    qc::format_cc_tail 4111111111111111 6
} -returnCodes 1 -result {suffix must be less than 4}
test format_cc_tail-1.2 {format_cc_tail 2} {qc::format_cc_tail 4111111111111111 2} "11"
test format_cc_tail-1.3 {format_cc_tail strip} {qc::format_cc_tail 4111-1111-1111-1111} "1111"
test format_cc_tail-1.3 {format_cc_tail masked} {qc::format_cc_tail 4111**********11} "**11"

test format_cc_masked-1.0 {format_cc_masked default} {qc::format_cc_masked 4111111111111111} "4111 11** **** 1111"
test format_cc_masked-1.1 {format_cc_masked 4 4 } {qc::format_cc_masked 4111111111111111 4 4} "4111 **** **** 1111"
test format_cc_masked-1.2 {format_cc_masked big prefix } -body {
    qc::format_cc_masked 4111111111111111 8 4
} -returnCodes 1 -result "prefix must be less than 6"
test format_cc_masked-1.2 {format_cc_masked big suffix } -body {
    qc::format_cc_masked 4111111111111111 6 5
} -returnCodes 1 -result "suffix must be less than 4"

test format_cc_masked_string-1.0 {format_cc_masked_string default} {qc::format_cc_masked_string 4111111111111111} "4111 11** **** 1111"
test format_cc_masked_string-1.1 {format_cc_masked_string big string} -body {
    qc::format_cc_masked_string  "Lorem ipsum dolor 4111 1111 1111 1111 sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore 6331101999990016 et dolore magna aliqua6011000990139424. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor 4222222222222 in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.4012888888881881"
} -result {Lorem ipsum dolor 4111 11** **** 1111 sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore 6331 10** **** 0016 et dolore magna aliqua6011 00** **** 9424. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor 4222 22** *222 2 in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.4012 88** **** 1881}
test format_cc_masked_string-1.2 {format_cc_masked_string big 4 4} -body {
    qc::format_cc_masked_string  "Lorem ipsum dolor 4111 1111 1111 1111 sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore 6331101999990016 et dolore magna aliqua6011000990139424. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor 4222222222222 in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.4012888888881881" 4 4
} -result {Lorem ipsum dolor 4111 **** **** 1111 sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore 6331 **** **** 0016 et dolore magna aliqua6011 **** **** 9424. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor 4222 **** *222 2 in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.4012 **** **** 1881}
test format_cc_masked_string-1.3 {format_cc_masked_string big prefix} -body {
    qc::format_cc_masked_string 4111111111111111 7 4
} -returnCodes 1 -result "prefix must be less than 6"
test format_cc_masked_string-1.3 {format_cc_masked_string big suffix} -body {
    qc::format_cc_masked_string 4111111111111111 6 6
} -returnCodes 1 -result "suffix must be less than 4"

test format_ordinal-1.0 {format_ordinal eleventh} {qc::format_ordinal 411} "411th"
test format_ordinal-1.1 {format_ordinal st} {qc::format_ordinal 421} "421st"
test format_ordinal-1.2 {format_ordinal rd} {qc::format_ordinal 423} "423rd"
test format_ordinal-1.3 {format_ordinal nd} {qc::format_ordinal 22} "22nd"
test format_ordinal-1.4 {format_ordinal th} {qc::format_ordinal 4} "4th"

test format_right0-1.0 {format_right0 pad to 6} {qc::format_right0 411 6} "000411"
test format_right0-1.1 {format_right0 truncate} {qc::format_right0 411111111 6} "411111"
test format_right0-1.2 {format_right0 2} {qc::format_right0 1 2} "01"

test format_left-1.0 {format_left pad to 10} {qc::format_left "32 Doors" 10} {32 Doors  }
test format_left-1.1 {format_left truncate to 4} {qc::format_left "32 Doors" 4} {32 D}
test format_left-1.3 {format_left do nothing} {qc::format_left "32 Doors" 8} {32 Doors}

test format_right-1.0 {format_right pad to 30} {qc::format_right "Supernatural Anaesthetist" 30} {     Supernatural Anaesthetist}
test format_right-1.1 {format_right trunc to 10} {qc::format_right "Supernatural Anaesthetist" 10} {Supernatur}
test format_right-1.2 {format_right do nothing} {qc::format_right "Supernatural Anaesthetist" 25} {Supernatural Anaesthetist}

test format_center-1.0 {format_center pad to 30} {qc::format_center "Lamia of the Pool" 30} {       Lamia of the Pool      }
test format_center-1.1 {format_center trunc to 10} {qc::format_center "Lamia of the Pool" 10} {Lamia of t}
test format_center-1.2 {format_center do nothing} {qc::format_center "Lamia of the Pool" 17} {Lamia of the Pool}

test format_bool-1.0 {format_bool Y} {qc::format_bool Y} {<span class="true">Yes</span>}
test format_bool-1.1 {format_bool N} {qc::format_bool N} {<span class="false">No</span>}
test format_bool-1.2 {format_bool custom} {qc::format_bool true hai iie} {<span class="true">hai</span>}
test format_bool-1.3 {format_bool nonsense} {qc::format_bool eggmeat} {<span class="false">No</span>}

test format_yesno-1.0 {format_yesno Y} {qc::format_yesno Y} {<span class="true">Yes</span>} 
test format_yesno-1.1 {format_yesno false} {qc::format_yesno false} {<span class="false">No</span>} 

test format_number-1.0 {format_number default} {qc::format_number 123456} 123,456
test format_number-1.1 {format_number no commify} {qc::format_number -commify no 123456} 123456
test format_number-1.2 {format_number 3 sigfigs} {qc::format_number -sigfigs 3 123456} 123,000
test format_number-1.3 {format_number 3 sigfigs round up} {qc::format_number -sigfigs 3 123999} 124,000
test format_number-1.4 {format_number dp 3} {qc::format_number -dp 3 123999} 123,999.000
test format_number-1.5 {format_number all} {qc::format_number -dp 3 -sigfigs 3 -commify no 123999} 124000.000

test format_if_number-1.0 {format_if_number default} {qc::format_if_number 123456} 123,456
test format_if_number-1.1 {format_if_number text} {qc::format_if_number Scree} Scree
test format_if_number-1.2 {format_if_number all} {qc::format_if_number -dp 3 -sigfigs 3 -commify no 123999} 124000.000
test format_if_number-1.3 {format_if_number text all} {qc::format_if_number -dp 3 -sigfigs 3 -commify no -- Slippermen} Slippermen


cleanupTests
