package require tcltest
package require mock_ns
namespace import ::tcltest::test ::tcltest::cleanupTests ::tcltest::testConstraint mock_ns::*

# Load all .tcl files
package require fileutil
set files [lsort [fileutil::findByPattern "~/qcode-tcl/tcl" "*.tcl"]]
foreach file $files {
    source $file
}
namespace import ::qc::*

set setup {
    ns_conn _set headers        [ns_set create headers]
    ns_conn _set outputheaders  [ns_set create outputheaders]
}

set cleanup {
    mock_ns::_reset
}

test return_next1.0 \
    {return_next non-legacy 443 relative non-anchored} \
    -setup $setup \
    -cleanup $cleanup \
    -body {
        ns_conn _set protocol "https"
        ns_conn _set headers [ns_set create headers \
                                "Host" "www.qcode.co.uk" \
                             ]
        set next_url "admin.tcl"
        return [qc::return_next $next_url]
    } \
    -result {https://www.qcode.co.uk/admin.tcl}

test return_next1.1 \
    {return_next non-legacy 80 relative non-anchored} \
    -setup $setup \
    -cleanup $cleanup \
    -body {
        ns_conn _set protocol "http"
        ns_conn _set headers [ns_set create headers \
                                "Host" "www.qcode.co.uk" \
                             ]
        set next_url "admin.tcl"
        return [qc::return_next $next_url]
    } \
    -result {http://www.qcode.co.uk/admin.tcl}

test return_next1.1 \
    {return_next non-legacy 80 relative non-anchored proxied} \
    -setup $setup \
    -cleanup $cleanup \
    -body {
        ns_conn _set protocol "http"
        ns_conn _set headers [ns_set create headers \
                                "Host"              "www.qcode.co.uk" \
                                "X-Forwarded-Proto" "https" \
                             ]
        set next_url "admin.tcl"
        return [qc::return_next $next_url]
    } \
    -result {https://www.qcode.co.uk/admin.tcl}

test return_next1.2 \
    {return_next non-legacy custom relative non-anchored} \
    -setup $setup \
    -cleanup $cleanup \
    -body {
        ns_conn _set protocol "https"
        ns_conn _set headers [ns_set create headers \
                                "Host" "www.qcode.co.uk:8443" \
                             ]
        set next_url "admin.tcl"
        return [qc::return_next $next_url]
    } \
    -result {https://www.qcode.co.uk:8443/admin.tcl}

test return_next1.3 \
    {return_next non-legacy relative anchored} \
    -setup $setup \
    -cleanup $cleanup \
    -body {
        ns_conn _set protocol "https"
        ns_conn _set headers [ns_set create headers \
                                "Host" "www.qcode.co.uk" \
                             ]
        set next_url "/admin.tcl"
        return [qc::return_next $next_url]
    } \
    -result {https://www.qcode.co.uk/admin.tcl}

test return_next1.4 \
    {return_next non-legacy absolute} \
    -setup $setup \
    -cleanup $cleanup \
    -body {
        ns_conn _set protocol "https"
        ns_conn _set headers [ns_set create headers \
                                "Host" "www.qcode.co.uk" \
                             ]
        set next_url "https://www.qcode.co.uk/admin.tcl"
        return [qc::return_next $next_url]
    } \
    -result {https://www.qcode.co.uk/admin.tcl}

test return_next1.5 \
    {return_next legacy 443 relative non-anchored} \
    -setup $setup \
    -cleanup $cleanup \
    -body {
        ns_conn _set protocol "https"
        ns_conn _set headers  [ns_set create headers \
                                 "Host" "www.qcode.co.uk" \
                                 "Port" "443" \
                              ]
        set next_url "admin.tcl"
        return [qc::return_next $next_url]
    } \
    -result {https://www.qcode.co.uk/admin.tcl}

test return_next1.6 \
    {return_next legacy 80 relative non-anchored} \
    -setup $setup \
    -cleanup $cleanup \
    -body {
        ns_conn _set protocol "http"
        ns_conn _set headers  [ns_set create headers \
                                 "Host" "www.qcode.co.uk" \
                                 "Port" "80" \
                              ]
        set next_url "admin.tcl"
        return [qc::return_next $next_url]
    } \
    -result {http://www.qcode.co.uk/admin.tcl}

test return_next1.7 \
    {return_next legacy custom relative non-anchored} \
    -setup $setup \
    -cleanup $cleanup \
    -body {
        ns_conn _set protocol "https"
        ns_conn _set headers  [ns_set create headers \
                                 "Host" "www.qcode.co.uk" \
                                 "Port" "8443" \
                              ]
        set next_url "admin.tcl"
        return [qc::return_next $next_url]
    } \
    -result {https://www.qcode.co.uk:8443/admin.tcl}

test return_next1.8 \
    {return_next legacy relative anchored} \
    -setup $setup \
    -cleanup $cleanup \
    -body {
        ns_conn _set protocol "https"
        ns_conn _set headers  [ns_set create headers \
                                 "Host" "www.qcode.co.uk" \
                                 "Port" "443" \
                              ]
        set next_url "/admin.tcl"
        return [qc::return_next $next_url]
    } \
    -result {https://www.qcode.co.uk/admin.tcl}

test return_next1.9 \
    {return_next legacy absolute} \
    -setup $setup \
    -cleanup $cleanup \
    -body {
        ns_conn _set protocol "https"
        ns_conn _set headers  [ns_set create headers \
                                 "Host" "www.qcode.co.uk" \
                                 "Port" "443" \
                              ]
        set next_url "https://www.qcode.co.uk/admin.tcl"
        return [qc::return_next $next_url]
    } \
    -result {https://www.qcode.co.uk/admin.tcl}

test return_next1.10 \
    {return_next non-legacy cross domain} \
    -setup $setup \
    -cleanup $cleanup \
    -body {
        ns_conn _set protocol "https"
        ns_conn _set headers [ns_set create headers \
                                "Host" "www.qcode.co.uk" \
                             ]
        set next_url "https://www.anotherdomain.co.uk/admin.tcl"
        return [qc::return_next $next_url]
    } \
    -returnCodes error \
    -result {Could not cast "https://www.anotherdomain.co.uk/admin.tcl" to valid next_url. Domain must be "www.qcode.co.uk".}

test return_next1.11 \
    {return_next non-legacy invalid} \
    -setup $setup \
    -cleanup $cleanup \
    -body {
        ns_conn _set protocol "https"
        ns_conn _set headers [ns_set create headers \
                                "Host" "www.qcode.co.uk" \
                             ]
        set next_url "https://www.qcode.co.uk/<script>hello;<script>"
        return [qc::return_next $next_url]
    } \
    -returnCodes error \
    -result {Could not cast "https://www.qcode.co.uk/&lt;script&gt;hello;&lt;script&gt;" to valid next_url. Invalid URL.}

test return_next1.12 \
    {return_next http/1.0} \
    -setup $setup \
    -cleanup $cleanup \
    -body {
        ns_conn _set protocol "https"
        ns_conn _set location "https://www.fallback.co.uk"
        ns_conn _set headers [ns_set create headers \
                                "Host" "" \
                             ]
        set next_url "/admin.tcl"
        return [qc::return_next $next_url]
    } \
    -result {https://www.fallback.co.uk/admin.tcl}

test return_next1.13 \
    {return_next http/1.0} \
    -setup $setup \
    -cleanup $cleanup \
    -body {

        ns_conn _set protocol "https"
        ns_conn _set location "https://www.fallback.co.uk"
        ns_conn _set headers [ns_set create headers \
                                "Host" "" \
                             ]
        set next_url "admin.tcl"
        return [qc::return_next $next_url]
    } \
    -result {https://www.fallback.co.uk/admin.tcl}

test return_next1.14 \
    {return_next non-legacy 443 with query string} \
    -setup $setup \
    -cleanup $cleanup \
    -body {
        ns_conn _set protocol "https"
        ns_conn _set headers [ns_set create headers \
                                "Host" "www.qcode.co.uk" \
                             ]
        set next_url "https://www.qcode.co.uk?x=y"
        return [qc::return_next $next_url]
    } \
    -result {https://www.qcode.co.uk?x=y}

test return_next1.15 \
    {return_next non-legacy 443 with anchor} \
    -setup $setup \
    -cleanup $cleanup \
    -body {
        ns_conn _set protocol "https"
        ns_conn _set headers [ns_set create headers \
                                "Host" "www.qcode.co.uk" \
                             ]
        set next_url "https://www.qcode.co.uk#id"
        return [qc::return_next $next_url]
    } \
    -result {https://www.qcode.co.uk#id}

cleanupTests
